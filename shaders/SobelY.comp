#version 450

layout (local_size_x = 16, local_size_y = 16) in;
layout(binding = 0, rgba8) uniform readonly image2D inputImage;
layout(binding = 1, rgba8) uniform image2D resultImage;

void main(){
	ivec2 pixelCoords = ivec2(gl_GlobalInvocationID.xy);

	vec4 sobelValue = vec4(0.0f, 0.0f, 0.0f, 0.0f);
	sobelValue += vec4(imageLoad(inputImage, ivec2(gl_GlobalInvocationID.x-1.0f, gl_GlobalInvocationID.y-1.0f)).rgb * -1.0f, -1.0f);
	sobelValue += vec4(imageLoad(inputImage, ivec2(gl_GlobalInvocationID.x, gl_GlobalInvocationID.y-1.0f)).rgb * -2.0f, -2.0f);
	sobelValue += vec4(imageLoad(inputImage, ivec2(gl_GlobalInvocationID.x+1.0f, gl_GlobalInvocationID.y-1.0f)).rgb * -1.0f, -1.0f);
	sobelValue += vec4(imageLoad(inputImage, ivec2(gl_GlobalInvocationID.x-1.0f, gl_GlobalInvocationID.y+1.0f)).rgb * 1.0f, 1.0f);
	sobelValue += vec4(imageLoad(inputImage, ivec2(gl_GlobalInvocationID.x, gl_GlobalInvocationID.y+1.0f)).rgb * 2.0f, 2.0f);
	sobelValue += vec4(imageLoad(inputImage, ivec2(gl_GlobalInvocationID.x+1.0f, gl_GlobalInvocationID.y+1.0f)).rgb * 1.0f, 1.0f);

	float sumValue = abs(sobelValue.x+sobelValue.y+sobelValue.z);

	vec4 pixel = vec4(sumValue, sumValue, sumValue, 1.0f);

	imageStore(resultImage, pixelCoords, pixel);
}
